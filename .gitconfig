[user]
	#email = EMAIL
	#name = NAME
[core]
	autocrlf = true
	editor = vim
	ignorecase = false
[color]
	status = true
	diff = true
	ui = auto
[alias]
	# utilisé tous les jours
	s = status -sb
	st = status

	ap = add -p
	f = fetch -p

	ci = commit
	cia = commit --amend
	oops = commit --amend --no-edit

	co = checkout
	cp = cherry-pick
	br = branch -avv

	# diff aliases
	d = diff
	ds = diff --stat
	dc = diff --cached

	# présentation
	prev = checkout HEAD^1
	next = "!sh -c 'git log --reverse --pretty=%H master | awk \"/$(git rev-parse HEAD)/{getline;print}\" | xargs git checkout'"

	lg = log --graph --pretty=tformat:'%Cred%h%Creset -%C(cyan)%d%Creset %s %Cgreen(%an %ar)%Creset'
	qu = log --graph --pretty=tformat:'%Cred%h%Creset -%C(cyan)%d%Creset %s %Cgreen(%an %ar)%Creset' HEAD@{u}... --boundary
	# Show branches with authors
	b-ls = for-each-ref --sort=-committerdate --format='%(committerdate) %(authorname) %(refname)' refs/remotes/origin/
	# montre toutes les branches
	lr = log --all --graph --decorate --oneline --simplify-by-decoration --no-merges
	# log timeline
	lt = log --format='%h %an %ar - %s'
	ll = log --graph --pretty="format:%C(yellow)%h%Creset by %C(red)%an%Creset (%ar)%C(cyan)%d%Creset%n%s%n%b" --all

	# Show last tag
	lt = describe --tags --abbrev=0

	# rebase
	rb  = rebase
	rbc = rebase --continue
	rbs = rebase --skip

	sm = submodule
	smu = submodule update --init --recursive

	# List all defined aliases
	aliases = "!git config -l | grep alias | cut -c 7-"

	# Pull with submodule update
	p = !git fetch --tags && git pull --prune && git submodule update --init --recursive

	# git pull with changed files fails. This alias saves all changes in stash, does a pull and applies the stash again
	sp = !git stash && git p && git stash pop

	# à tester
	ls-others = ls-files -o --exclude-standard
	plog = log --oneline --decorate --graph --boundary
	qf = log --format="%H" HEAD@{u}..
	qu1 = log --oneline --decorate --boundary --graph HEAD@{u}...
	quc = log --oneline --decorate --boundary --graph HEAD@{u}..
	qus = log --oneline --decorate --boundary --graph --stat -M HEAD@{u}...
	pq = log --oneline --decorate --graph -p -b HEAD@{u}...
	pqr = log --oneline --decorate --reverse -p -b HEAD@{u}...
	review = rebase --autosquash -i HEAD@{u}
	rework = rebase --autosquash --autostash -i HEAD@{u}
	fop = fetch -p origin
	clog = log -g --grep-relog="checkout:" --oneline
	pdiff = diff -w --color-words
	pshow = show --color-words
[merge]
	conflictStyle = diff3
	tool = vimdiff
[color "branch"]
	upstream = cyan
[push]
	default = simple
[tag]
	sort = version:refname
[rerere]
	enabled = true
[mergetool]
	prompt = false
